type Query {
  "Search for Board Games based on given query"
  boardGames(query: String!): [BoardGame!]!
  "Authenticate with an email address and a password"
  login(email: String!, password: String!): LoginResult!
}

type Mutation {
  "Create a new Event"
  createEvent(input: CreateEventInput!): Event!
  "Create a new User"
  createUser(input: CreateUserInput!): User!
}

input CreateEventInput {
  "When the Event is going to start"
  startTime: String!
  "Where the Event is taking place"
  latitude: Float!
  longitude: Float!
  "The games available in the Event"
  gameIds: [ID!]!
}

input CreateUserInput {
  "New User's name"
  name: String!
  "New User's unique email address"
  email: String!
  "New User's password"
  password: String!
}

type LoginResult {
  user: User!
  token: String!
}